import subprocess
import os

def identify_and_rename_exe_files(folder_path, trid_path):
    renamed_files = []

    print(f"DEBUG: Checking if folder exists: {folder_path}")
    if not os.path.exists(folder_path):
        print(f"ERROR: Folder does not exist: {folder_path}")
        return renamed_files

    print(f"DEBUG: Checking if TrID exists: {trid_path}")
    if not os.path.exists(trid_path):
        print(f"ERROR: TrID executable not found: {trid_path}")
        return renamed_files

    for file in os.listdir(folder_path):
        file_path = os.path.join(folder_path, file)
        print(f"DEBUG: Processing file: {file_path}")

        if os.path.isfile(file_path):
            try:
                # Run TrID to analyze the file
                print(f"DEBUG: Running TrID on {file_path}")
                result = subprocess.run(
                    [trid_path, '-ns', file_path],
                    capture_output=True,
                    text=True
                )

                print(f"DEBUG: TrID output:\n{result.stdout}")

                if result.returncode != 0:
                    print(f"ERROR: TrID returned an error for {file_path}: {result.stderr}")
                    continue

                if 'Win64 EXE' in result.stdout:
                    new_file_path = os.path.splitext(file_path)[0] + "_64.exe"
                    os.rename(file_path, new_file_path)
                    print(f"DEBUG: Renamed {file} to {new_file_path}")
                    renamed_files.append((file, new_file_path))
                elif 'Win32 EXE' in result.stdout:
                    new_file_path = os.path.splitext(file_path)[0] + "_32.exe"
                    os.rename(file_path, new_file_path)
                    print(f"DEBUG: Renamed {file} to {new_file_path}")
                    renamed_files.append((file, new_file_path))
                else:
                    print(f"DEBUG: File type not recognized by TrID for {file_path}")
            except Exception as e:
                print(f"ERROR: Failed to process {file_path}: {e}")
        else:
            print(f"DEBUG: Skipping non-file entry: {file_path}")

    return renamed_files

if __name__ == "__main__":
    folder_path = "../utils/raw_malware"  # Replace with your folder path
    trid_path = "../utils/trid.exe"  # Replace with the path to TrID executable

    print(f"DEBUG: Starting script with folder_path={folder_path} and trid_path={trid_path}")

    renamed_files = identify_and_rename_exe_files(folder_path, trid_path)
    print("Renamed .exe files:")
    for old_name, new_name in renamed_files:
        print(f"{old_name} -> {new_name}")

    print("DEBUG: Script completed")
