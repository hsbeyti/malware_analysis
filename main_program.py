import os
import time
from dotenv import load_dotenv
from core.VirtualBoxManagerHandler import VirtualBoxManagerHandler
from core.VirtualMachineSnapshotManager import VirtualMachineSnapshotManager

def main():
    # Load the .env file
    load_dotenv()

    # Read environment variables
    local_source_dir = os.getenv('LOCAL_SOURCE_DIR')
    local_dest_dir = os.getenv('LOCAL_DEST_DIR')

    if not local_source_dir or not local_dest_dir:
        print("Error: LOCAL_SOURCE_DIR or LOCAL_DEST_DIR is not defined in the .env file.")
        return

    if not os.path.exists(local_source_dir):
        print(f"Error: Source directory '{local_source_dir}' does not exist.")
        return

    # Get list of files in LOCAL_SOURCE_DIR
    files = os.listdir(local_source_dir)

    if not files:
        print(f"No files found in the directory: {local_source_dir}")
        return

    for file_name in files:
        file_path = os.path.join(local_source_dir, file_name)
        print(f"Processing file: {file_name}")

        # Ensure we are processing files only
        if not os.path.isfile(file_path):
            print(f"Skipping non-file entry: {file_name}")
            continue

        print(f"Processing file: {file_name}")

        # Create an instance of the handler and execute the run method
        # Instrument a  malware/Goodware (file_name) binary on Windows VM and get syscall back to host
        vbox_handler = VirtualBoxManagerHandler()
        vbox_handler.run(file_name)

        # Wait 100 seconds
        print("Waiting 20 seconds before proceeding...")
        time.sleep(10)

        # Create an instance of the VirtualMachineSnapshotManager
        vm_manager = VirtualMachineSnapshotManager()

        # Check initialization
        if not vm_manager.initialize_virtualbox():
            print("Failed to initialize VirtualBox Manager.")
            continue

        # Execute the snapshot management and VM start routine
        # delete current snapshot, take snapshot from base_image to instrument next malware/Goodware
        vm_manager.manage_snapshots_and_run_vm()

        # Wait 100 seconds
        print("Waiting 60 seconds before proceeding... wait for the windows VM to start ")
        time.sleep(60)


    print("All files processed successfully.")

if __name__ == "__main__":
    main()
