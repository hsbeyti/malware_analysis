import os
import shutil

def rename_and_move_files(source_folder, destination_folder):
    """
    Renames files in the source folder to a sequential format and moves them to the destination folder.

    Args:
        source_folder (str): Path to the folder containing files to rename.
        destination_folder (str): Path to the folder where renamed files will be moved.

    Returns:
        list: A list of renamed files with their new names.
    """
    renamed_files = []
    file_count = 1

    # Ensure the source folder exists
    if not os.path.exists(source_folder):
        print(f"ERROR: Source folder does not exist: {source_folder}")
        return renamed_files

    # Ensure the destination folder exists or create it
    if not os.path.exists(destination_folder):
        os.makedirs(destination_folder)
        print(f"Created destination folder: {destination_folder}")

    # Process each file in the source folder
    for file in os.listdir(source_folder):
        source_file_path = os.path.join(source_folder, file)

        # Skip directories
        if os.path.isfile(source_file_path):
            # Generate the new file name
            new_file_name = f"file_{file_count}.exe"
            destination_file_path = os.path.join(destination_folder, new_file_name)

            # Move and rename the file
            shutil.move(source_file_path, destination_file_path)
            renamed_files.append((file, new_file_name))
            print(f"Renamed and moved {file} -> {new_file_name}")

            # Increment the counter
            file_count += 1

    return renamed_files

if __name__ == "__main__":
    source_folder = "./raw_malware"  # Replace with your source folder path
    destination_folder = "./executable_malware"  # Replace with your destination folder path

    print(f"Starting the script for source folder: {source_folder}")
    renamed_files = rename_and_move_files(source_folder, destination_folder)

    print("Renaming and moving completed. Renamed files:")
    for old_name, new_name in renamed_files:
        print(f"{old_name} -> {new_name}")
